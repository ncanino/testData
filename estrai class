import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.util.Enumeration;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;

public class VerifyJavaVersion {

    public static void main(String[] args) throws IOException {
        // Directory principale contenente le sottocartelle con i file .jar
        String directoryPath = "path/to/directory";
        
        // Dichiarazione della variabile contatore
        int totalFiles = 0;
        
        // Ottiene un array di sottocartelle nella directory principale
        File directory = new File(directoryPath);
        File[] subdirectories = directory.listFiles(File::isDirectory);
        
        // Verifica la versione principale del bytecode di ogni file .class all'interno di ogni .jar in ogni sottocartella
        for (File subdirectory : subdirectories) {
            File targetDirectory = new File(subdirectory, "target");
            if (targetDirectory.exists()) {
                File[] jarFiles = targetDirectory.listFiles((dir, name) -> name.endsWith(".jar"));
                if (jarFiles != null) {
                    for (File jarFile : jarFiles) {
                        try (JarFile jar = new JarFile(jarFile)) {
                            Enumeration<JarEntry> entries = jar.entries();
                            while (entries.hasMoreElements()) {
                                JarEntry entry = entries.nextElement();
                                if (entry.getName().endsWith(".class")) {
                                    InputStream is = jar.getInputStream(entry);
                                    byte[] buffer = new byte[4096];
                                    int bytesRead;
                                    StringBuilder sb = new StringBuilder();
                                    while ((bytesRead = is.read(buffer)) != -1) {
                                        sb.append(new String(buffer, 0, bytesRead, "UTF-8"));
                                    }
                                    byte[] bytes = sb.toString().getBytes("ISO-8859-1");
                                    int majorVersion = ((bytes[6] & 0xFF) << 8) | (bytes[7] & 0xFF);
                                    System.out.println("Il file " + entry.getName() + " all'interno di " + jarFile.getName() + " ha la versione principale del bytecode " + majorVersion);
                                    totalFiles++; // Incrementa la variabile contatore
                                    break;
                                }
                            }
                        }
                    }
                }
            }
        }
        
        // Stampa il numero totale di file letti
        System.out.println("Numero totale di file letti: " + totalFiles);
    }
}
